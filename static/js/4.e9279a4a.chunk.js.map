{"version":3,"sources":["App/core/List/ListCore.js","App/util/hooks.js","App/core/List/plugins/InfiniteScroll.js","App/components/AppFrame.js","App/components/DefaultListItem.js","App/core/List/templates/ListTemplate.js","App/components/ListLayout.js","App/core/List/templates/LoadingTemplate.js","App/components/Loading.js","App/components/ListLoading.js","App/components/RepositoryListItem.js","App/modules/search/duck/selectors.js","App/util/createSelector.js","App/modules/search/pages/Search.js"],"names":["ListCore","props","otherPlugins","children","items","react_default","a","createElement","dx_react_core_es","name","params","defaultProps","useSelector","selector","input","arguments","length","undefined","mapState","useCallback","useMappedState","InfiniteScroll","loadMore","isLoading","handleScroll","_useState3","useState","_useState4","Object","slicedToArray","initialized","setInitialized","useEffect","window","addEventListener","event","removeEventListener","useScrollListener","scrollTop","document","documentElement","body","scrollHeight","clientHeight","innerHeight","scrollToBottom","Math","ceil","withStyles","theme","root","paddingTop","spacing","unit","paddingBottom","classes","Grid_default","container","xs","item","className","DefaultListItem","message","ListItem_default","ListItemText_default","primary","Typography_default","variant","ListTemplate","Container","containerComponent","Item","itemComponent","map","index","assign","key","components","withComponents","List","LoadingTemplate","Loading","loadingComponent","justify","alignItems","CircularProgress_default","color","RepositoriesListItem","fullName","htmlUrl","language","component","button","href","secondary","selectors","selectSearch","state","router","location","search","selectRepositoriesMeta","meta","repositories","getRepositories","entity","createSelector","ids","filter","id","getRepositoriesMeta","createMetaSelector","getQuery","queryString","parse","Search","defaultQuery","fetchRepositories","fetchAction","routerAction","push","dispatch","useDispatch","path","pathname","_useState","_useState2","query","fetchByUrl","newPath","concat","stringify","useFetchByQuery","actions","replace","ref","useRef","useLayoutEffect","current","handleLoadMore","url","pagination","nextUrl","metaId","status","components_AppFrame","TextField_default","label","fullWidth","onChange","q","target","value","defaultValue","List_ListCore","ListLayout","RepositoryListItem","ListLoading","plugins_InfiniteScroll"],"mappings":"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","file":"static/js/4.e9279a4a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { PluginHost, Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core'\n\nfunction ListCore (props) {\n  const { children: otherPlugins, items } = props\n  return (\n    <PluginHost>\n      <Plugin>\n        <Template name=\"root\">\n          <TemplatePlaceholder name=\"list\" params={items} />\n          <TemplatePlaceholder name=\"loading\" />\n        </Template>\n      </Plugin>\n      {otherPlugins}\n    </PluginHost>\n  )\n}\n\nListCore.defaultProps = {\n  items: []\n}\n\nListCore.propTypes = {\n  items: PropTypes.array\n}\n\nexport default ListCore\n","import { useState, useCallback, useEffect } from 'react'\nimport { useDispatch, useMappedState } from 'redux-react-hook'\nimport { push } from 'connected-react-router'\nimport queryString from 'query-string'\n\nexport function useFetchByQuery (defaultQuery, fetchAction, routerAction = push) {\n  const dispatch = useDispatch()\n  const mapState = useCallback(state => ({\n    path: state.router.location.pathname\n  }), [])\n  const { path } = useMappedState(mapState)\n\n  const [initialized, setInitialized] = useState(false)\n  useEffect(() => {\n    if (!initialized) {\n      dispatch(fetchAction(defaultQuery))\n      setInitialized(true)\n    }\n  })\n\n  const fetch = (query) => {\n    if (!query.fetchByUrl) {\n      const newPath = `${path}?${queryString.stringify(query)}`\n      dispatch(routerAction(newPath))\n    }\n    dispatch(fetchAction(query))\n  }\n\n  return fetch\n}\n\nexport function useSelector (selector, input = []) {\n  const mapState = useCallback(selector, input)\n  return useMappedState(mapState)\n}\n\nexport function useScrollListener (handleScroll) {\n  const [initialized, setInitialized] = useState(false)\n  useEffect(() => {\n    if (!initialized) {\n      window.addEventListener('scroll', (event) => handleScroll(event))\n      setInitialized(true)\n    }\n    return window.removeEventListener('scroll', handleScroll)\n  })\n}\n","import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core'\nimport { useScrollListener } from '../../../util/hooks'\n\nfunction InfiniteScroll (props) {\n  const { loadMore, isLoading } = props\n  const handleScroll = useCallback(() => {\n    const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop\n    const scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight\n    const clientHeight = document.documentElement.clientHeight || window.innerHeight\n    const scrollToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight\n    if (loadMore && !isLoading && scrollToBottom) loadMore()\n  }, [loadMore])\n  useScrollListener(handleScroll)\n  return (\n    <Plugin>\n      <Template name=\"list\">\n        {(items) => (\n          <TemplatePlaceholder />\n        )}\n      </Template>\n    </Plugin>\n  )\n}\n\nInfiniteScroll.defaultProps = {\n  loadMore: null,\n  isLoading: false\n}\n\nInfiniteScroll.propTypes = {\n  loadMore: PropTypes.func,\n  isLoading: PropTypes.bool\n}\n\nexport default InfiniteScroll\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n  root: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2\n  }\n})\n\nfunction AppFrame (props) {\n  const { classes, children } = props\n  return (\n    <Grid container>\n      <Grid xs item />\n      <Grid xs item className={classes.root}>\n        {children}\n      </Grid>\n      <Grid xs item />\n    </Grid>\n  )\n}\n\nAppFrame.propTypes = {\n  children: PropTypes.node\n}\n\nexport default withStyles(styles)(AppFrame)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nfunction DefaultListItem (props) {\n  const { message } = props\n  return (\n    <ListItem>\n      <ListItemText primary={<Typography variant=\"subtitle1\">{message}</Typography>} />\n    </ListItem>\n  )\n}\n\nDefaultListItem.defaultProps = {\n  message: ''\n}\n\nDefaultListItem.propTypes = {\n  message: PropTypes.string\n}\n\nexport default DefaultListItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template } from '@devexpress/dx-react-core'\n\nfunction ListTemplate (props) {\n  const {\n    containerComponent: Container,\n    itemComponent: Item\n  } = props\n  return (\n    <Plugin>\n      <Template name=\"list\">\n        {(items) => (\n          <Container>\n            {items.map((item, index) => (<Item key={index} {...item} />))}\n          </Container>\n        )}\n      </Template>\n    </Plugin>\n  )\n}\n\nListTemplate.propTypes = {\n  containerComponent: PropTypes.func,\n  itemComponent: PropTypes.func\n}\n\nListTemplate.components = {\n  containerComponent: 'Container',\n  itemComponent: 'Item'\n}\n\nexport default ListTemplate\n","import { withComponents } from '@devexpress/dx-react-core'\nimport List from '@material-ui/core/List'\nimport DefaultListItem from './DefaultListItem'\nimport ListTemplate from '../core/List/templates/ListTemplate'\n\nexport default withComponents({\n  Container: List,\n  Item: DefaultListItem\n})(ListTemplate)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template } from '@devexpress/dx-react-core'\n\nfunction LoadingTemplate (props) {\n  const {\n    isLoading,\n    loadingComponent: Loading\n  } = props\n  return (\n    <Plugin>\n      <Template name=\"loading\">\n        {() => {\n          if (isLoading) return (<Loading />)\n          return null\n        }}\n      </Template>\n    </Plugin>\n  )\n}\n\nLoadingTemplate.defaultProps = {\n  isLoading: false\n}\n\nLoadingTemplate.propTypes = {\n  isLoading: PropTypes.bool,\n  loadingComponent: PropTypes.func\n}\n\nLoadingTemplate.components = {\n  loadingComponent: 'Loading'\n}\n\nexport default LoadingTemplate\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\n\nfunction Loading (props) {\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <CircularProgress color=\"secondary\" />\n    </Grid>\n  )\n}\n\nexport default Loading\n","import { withComponents } from '@devexpress/dx-react-core'\nimport LoadingTemplate from '../core/List/templates/LoadingTemplate'\nimport Loading from './Loading'\n\nexport default withComponents({\n  Loading\n})(LoadingTemplate)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nfunction RepositoriesListItem (props) {\n  const { fullName, htmlUrl, language } = props\n  return (\n    <ListItem component=\"a\" button href={htmlUrl}>\n      <ListItemText\n        primary={<Typography variant=\"subtitle1\">{fullName}</Typography>}\n        secondary={<Typography variant=\"body2\">{language}</Typography>}\n      />\n    </ListItem>\n  )\n}\n\nRepositoriesListItem.defaultProps = {\n  fullName: '',\n  htmlUrl: '',\n  language: ''\n}\n\nRepositoriesListItem.propTypes = {\n  fullName: PropTypes.string,\n  htmlUrl: PropTypes.string,\n  language: PropTypes.string\n}\n\nexport default RepositoriesListItem\n","import { createSelector } from 'reselect'\nimport queryString from 'query-string'\nimport { createListSelector, createMetaSelector } from '../../../util/createSelector'\n\nexport const selectSearch = state => state.router.location.search\n\nexport const selectRepositoriesEntity = state => state.search.entity.repositories || {}\nexport const selectRepositoriesMeta = state => state.search.meta.repositories || {}\n\nexport const getRepositories = createListSelector([selectSearch, selectRepositoriesEntity, selectRepositoriesMeta])\nexport const getRepositoriesMeta = createMetaSelector([selectSearch, selectRepositoriesMeta])\nexport const getQuery = createSelector(selectSearch, (search) => queryString.parse(search))\n","import { createSelector } from 'reselect'\n\nexport function createListSelector (selectors) {\n  return createSelector(\n    selectors,\n    (search, entity, meta) => {\n      const selectedMeta = meta[search] || {}\n      const ids = selectedMeta.ids || []\n      const list = ids\n        .filter(id => entity[id] !== undefined)\n        .map(id => entity[id])\n      return list\n    }\n  )\n}\n\nexport function createMetaSelector (selectors) {\n  return createSelector(\n    selectors,\n    (search, meta) => meta[search] || {}\n  )\n}\n","import React, { useRef, useLayoutEffect, useCallback } from 'react'\nimport { replace } from 'connected-react-router'\nimport TextField from '@material-ui/core/TextField'\nimport ListCore from '../../../core/List'\nimport InfiniteScroll from '../../../core/List/plugins/InfiniteScroll'\nimport AppFrame from '../../../components/AppFrame'\nimport ListLayout from '../../../components/ListLayout'\nimport ListLoading from '../../../components/ListLoading'\nimport RepositoryListItem from '../../../components/RepositoryListItem'\nimport { useFetchByQuery, useSelector } from '../../../util/hooks'\nimport { getRepositories, getRepositoriesMeta, getQuery } from '../duck/selectors'\nimport * as actions from '../duck/actions'\n\nfunction Search (props) {\n  const repositories = useSelector(getRepositories)\n  const meta = useSelector(getRepositoriesMeta)\n  const defaultQuery = useSelector(getQuery)\n  const fetchRepositories = useFetchByQuery(defaultQuery, actions.fetchRepositories, replace)\n  const ref = useRef()\n  useLayoutEffect(() => {\n    ref.current = meta\n  })\n  const handleLoadMore = useCallback(() => {\n    const meta = ref.current\n    fetchRepositories({ fetchByUrl: true, url: meta.pagination.nextUrl, metaId: meta.id })\n  }, [ref])\n  const isLoading = meta.status === 'loading'\n  return (\n    <AppFrame>\n      <TextField\n        label=\"Search GitHub\"\n        fullWidth\n        onChange={(event) => fetchRepositories({ q: event.target.value })}\n        defaultValue={defaultQuery.q}\n      />\n      <ListCore items={repositories}>\n        <ListLayout itemComponent={RepositoryListItem} />\n        <ListLoading isLoading={isLoading} />\n        <InfiniteScroll\n          isLoading={isLoading}\n          loadMore={handleLoadMore}\n        />\n      </ListCore>\n    </AppFrame>\n  )\n}\n\nexport default Search\n"],"sourceRoot":""}