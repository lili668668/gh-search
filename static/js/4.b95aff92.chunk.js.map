{"version":3,"sources":["App/core/List/ListCore.js","App/util/hooks.js","App/core/List/plugins/InfiniteScroll.js","App/components/DefaultListItem.js","App/core/List/templates/ListTemplate.js","App/components/ListLayout.js","App/core/List/templates/LoadingTemplate.js","App/components/Loading.js","App/components/ListLoading.js","App/components/RepositoryListItem.js","App/components/CardTextField.js","App/modules/search/duck/selectors.js","App/util/createSelector.js","App/modules/search/pages/Search.js"],"names":["ListCore","props","otherPlugins","children","items","react_default","a","createElement","dx_react_core_es","name","params","defaultProps","useSelector","selector","input","arguments","length","undefined","mapState","useCallback","useMappedState","InfiniteScroll","loadMore","isLoading","target","document","documentElement","body","handleScroll","window","useEffect","scroll","event","addEventListener","removeEventListener","useScrollListener","scrollHeight","clientHeight","scrollTop","scrollToBottom","Math","ceil","DefaultListItem","message","ListItem_default","ListItemText_default","primary","Typography_default","variant","ListTemplate","Container","containerComponent","Item","itemComponent","map","item","index","Object","assign","key","components","withComponents","List","LoadingTemplate","Loading","loadingComponent","withStyles","theme","root","paddingBottom","spacing","unit","classes","Grid_default","className","container","justify","alignItems","CircularProgress_default","color","RepositoriesListItem","fullName","htmlUrl","language","component","button","href","secondary","StyledPaper","padding","Paper_default","StyledField","restProps","objectWithoutProperties","TextField_default","CardTextField","selectors","selectSearch","state","router","location","search","selectRepositoriesMeta","meta","repositories","getRepositories","entity","createSelector","ids","filter","id","getRepositoriesMeta","createMetaSelector","getQuery","queryString","parse","list","paddingTop","paper","maxHeight","overflowY","defaultQuery","fetchRepositories","fetchAction","routerAction","push","dispatch","useDispatch","path","pathname","_useState","useState","_useState2","slicedToArray","initialized","setInitialized","query","fetchByUrl","newPath","concat","stringify","useFetchByQuery","actions","replace","ref","useRef","useLayoutEffect","current","handleLoadMore","url","pagination","nextUrl","metaId","status","AppFrame","title","components_CardTextField","label","fullWidth","onChange","q","value","defaultValue","List_ListCore","ListLayout","RepositoryListItem","ListLoading","plugins_InfiniteScroll","querySelector"],"mappings":"gKAIA,SAASA,EAAUC,GAAO,IACNC,EAAwBD,EAAlCE,SAAwBC,EAAUH,EAAVG,MAChC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAK,QACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAqBC,KAAK,OAAOC,OAAQN,IACzCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAqBC,KAAK,cAG7BP,GAKPF,EAASW,aAAe,CACtBP,MAAO,IAOMJ,2CCIR,SAASY,EAAaC,GAAsB,IAAZC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACvCG,EAAWC,sBAAYN,EAAUC,GACvC,OAAOM,YAAeF,GC5BxB,SAASG,EAAgBpB,GAAO,IACtBqB,EAAwBrB,EAAxBqB,SAAUC,EAActB,EAAdsB,UACZC,EAASvB,EAAMuB,QAAUC,SAASC,iBAAmBD,SAASE,KASpE,ODoBK,SAA4BC,GAA+B,IAAjBJ,EAAiBT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAARc,OACxDC,oBAAU,WACR,IAAMC,EAAS,SAACC,GAAD,OAAWJ,EAAaI,IAEvC,OADAR,EAAOS,iBAAiB,SAAUF,GAC3B,kBAAMP,EAAOU,oBAAoB,SAAUH,MCzBpDI,CAPqBhB,sBAAY,SAACa,GAChC,IAAMI,EAAeZ,EAAOY,aACtBC,EAAeb,EAAOa,aACtBC,EAAYd,EAAOc,UACnBC,EAAiBC,KAAKC,KAAKH,EAAYD,IAAiBD,EAC1Dd,IAAaC,GAAagB,GAAgBjB,KAC7C,CAACA,EAAUC,EAAWC,IACOA,GAE9BnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAK,QACZ,SAACL,GAAD,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAOVa,EAAeV,aAAe,CAC5BW,SAAU,KACVC,WAAW,GASEF,sEChCf,SAASqB,EAAiBzC,GAAO,IACvB0C,EAAY1C,EAAZ0C,QACR,OACEtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,KACED,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CAAcwC,QAASzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAY0C,QAAQ,aAAaL,MAK9DD,EAAgB/B,aAAe,CAC7BgC,QAAS,IAOID,0BCnBf,SAASO,EAAchD,GAAO,IAENiD,EAElBjD,EAFFkD,mBACeC,EACbnD,EADFoD,cAEF,OACEhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAK,QACZ,SAACL,GAAD,OACCC,EAAAC,EAAAC,cAAC2C,EAAD,KACG9C,EAAMkD,IAAI,SAACC,EAAMC,GAAP,OAAkBnD,EAAAC,EAAAC,cAAC6C,EAADK,OAAAC,OAAA,CAAMC,IAAKH,GAAWD,UAa/DN,EAAaW,WAAa,CACxBT,mBAAoB,YACpBE,cAAe,QAGFJ,QC3BAY,cAAe,CAC5BX,UAAWY,IACXV,KAAMV,GAFOmB,CAGZZ,GCJH,SAASc,EAAiB9D,GAAO,IAE7BsB,EAEEtB,EAFFsB,UACkByC,EAChB/D,EADFgE,iBAEF,OACE5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAK,WACZ,WACC,OAAIc,EAAmBlB,EAAAC,EAAAC,cAACyD,EAAD,MAChB,QAOjBD,EAAgBpD,aAAe,CAC7BY,WAAW,GAQbwC,EAAgBH,WAAa,CAC3BK,iBAAkB,WAGLF,2CCdAG,2BAfA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,cAAoC,EAArBF,EAAMG,QAAQC,QAalBL,CATf,SAAkBjE,GAAO,IACfuE,EAAYvE,EAAZuE,QACR,OACEnE,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAMoE,UAAWF,EAAQJ,KAAMO,WAAS,EAACC,QAAQ,SAASC,WAAW,UACnExE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAkByE,MAAM,iBCXflB,cAAe,CAC5BG,WADaH,CAEZE,GCAH,SAASiB,EAAsB/E,GAAO,IAC5BgF,EAAgChF,EAAhCgF,SAAUC,EAAsBjF,EAAtBiF,QAASC,EAAalF,EAAbkF,SAC3B,OACE9E,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAU8E,UAAU,IAAIC,QAAM,EAACC,KAAMJ,GACnC7E,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CACEwC,QAASzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAY0C,QAAQ,aAAaiC,GAC1CM,UAAWlF,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAY0C,QAAQ,SAASmC,MAMhDH,EAAqBrE,aAAe,CAClCsE,SAAU,GACVC,QAAS,GACTC,SAAU,IASGH,mCCJf,IAAMQ,EAActB,qBArBA,SAAAC,GAAK,MAAK,CAC5BC,KAAM,CACJqB,QAAStB,EAAMG,QAAQC,QAmBPL,CATpB,SAAoBjE,GAAO,IACjBuE,EAAsBvE,EAAtBuE,QAASrE,EAAaF,EAAbE,SACjB,OACEE,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CAAOoE,UAAWF,EAAQJ,MACvBjE,KAYP,IAAMwF,EAAczB,qBAtBA,SAAAC,GAAK,MAAK,CAC5BC,KAAM,CACJqB,QAAS,KAoBOvB,CALpB,SAAoBjE,GAAO,IACjBuE,EAA0BvE,EAA1BuE,QAAYoB,EADKnC,OAAAoC,EAAA,EAAApC,CACSxD,EADT,aAEzB,OAAQI,EAAAC,EAAAC,cAACuF,EAAAxF,EAADmD,OAAAC,OAAA,CAAWgB,UAAWF,EAAQJ,MAAUwB,MAanCG,MARf,SAAwB9F,GACtB,OACEI,EAAAC,EAAAC,cAACiF,EAAD,KACEnF,EAAAC,EAAAC,cAACoF,EAAgB1F,cClChB,ICF6B+F,EDEvBC,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,SAASC,QAG9CC,EAAyB,SAAAJ,GAAK,OAAIA,EAAMG,OAAOE,KAAKC,cAAgB,IAEpEC,GCPuBT,EDOc,CAACC,EAHX,SAAAC,GAAK,OAAIA,EAAMG,OAAOK,OAAOF,cAAgB,IAGMF,GCNlFK,YACLX,EACA,SAACK,EAAQK,EAAQH,GAMf,QALqBA,EAAKF,IAAW,IACZO,KAAO,IAE7BC,OAAO,SAAAC,GAAE,YAAmB7F,IAAfyF,EAAOI,KACpBxD,IAAI,SAAAwD,GAAE,OAAIJ,EAAOI,QDAbC,GCMN,SAA6Bf,GAClC,OAAOW,YACLX,EACA,SAACK,EAAQE,GAAT,OAAkBA,EAAKF,IAAW,KDTHW,CAAmB,CAACf,EAAcK,IACxDW,GAAWN,YAAeV,EAAc,SAACI,GAAD,OAAYa,IAAYC,MAAMd,eE8DpEnC,+BAxDA,SAAAC,GAAK,MAAK,CACvBiD,KAAM,CACJC,WAAYlD,EAAMG,QAAQC,KAC1BF,cAAeF,EAAMG,QAAQC,MAE/B+C,MAAO,CACLC,UARiB,IASjBC,UAAW,UAiDAtD,CA7Cf,SAAiBjE,GAAO,IACduE,EAAYvE,EAAZuE,QACFgC,EAAe5F,EAAY6F,GAC3BF,EAAO3F,EAAYmG,IACnBU,EAAe7G,EAAYqG,IAC3BS,EZ5BD,SAA0BD,EAAcE,GAAkC,IAArBC,EAAqB7G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN8G,IACnEC,EAAWC,cACX7G,EAAWC,sBAAY,SAAA+E,GAAK,MAAK,CACrC8B,KAAM9B,EAAMC,OAAOC,SAAS6B,WAC1B,IACID,EAAS5G,YAAeF,GAAxB8G,KALuEE,EAOzCC,oBAAS,GAPgCC,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GAOxEI,EAPwEF,EAAA,GAO3DG,EAP2DH,EAAA,GAuB/E,OAfAtG,oBAAU,WACHwG,IACHR,EAASH,EAAYF,IACrBc,GAAe,MAIL,SAACC,GACb,IAAKA,EAAMC,WAAY,CACrB,IAAMC,EAAO,GAAAC,OAAMX,EAAN,KAAAW,OAAczB,IAAY0B,UAAUJ,IACjDV,EAASF,EAAac,IAExBZ,EAASH,EAAYa,KYQGK,CAAgBpB,EAAcqB,KAA2BC,KAC7EC,EAAMC,mBACZC,0BAAgB,WACdF,EAAIG,QAAU5C,IAEhB,IAAM6C,EAAiBjI,sBAAY,WACjC,IAAMoF,EAAOyC,EAAIG,QACjBzB,EAAkB,CAAEe,YAAY,EAAMY,IAAK9C,EAAK+C,WAAWC,QAASC,OAAQjD,EAAKO,MAChF,CAACkC,IACEzH,EAA4B,YAAhBgF,EAAKkD,OAEvB,OACEpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAUC,MAAM,iBACdtJ,EAAAC,EAAAC,cAACqJ,EAAD,CACEC,MAAM,SACNC,WAAS,EACTC,SAAU,SAAC/H,GAAD,OAAW0F,EAAkB,CAAEsC,EAAGhI,EAAMR,OAAOyI,SACzDC,aAAczC,EAAauC,IAE7B3J,EAAAC,EAAAC,cAAA,WAASmE,UAAWF,EAAQ4C,MAC1B/G,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKuG,GAAG,QAAQpC,UAAWF,EAAQ8C,QACP,IAAxBd,EAAaxF,QAAgBO,IAC7BlB,EAAAC,EAAAC,cAAC4J,EAAD,CAAU/J,MAAOoG,GACfnG,EAAAC,EAAAC,cAAC6J,EAAD,CAAY/G,cAAegH,IAC3BhK,EAAAC,EAAAC,cAAC+J,EAAD,CAAa/I,UAAWA,IACxBlB,EAAAC,EAAAC,cAACgK,EAAD,CACEhJ,UAAWA,EACXD,SAAU8H,EACV5H,OAAQC,SAAS+I,cAAc","file":"static/js/4.b95aff92.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { PluginHost, Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core'\n\nfunction ListCore (props) {\n  const { children: otherPlugins, items } = props\n  return (\n    <PluginHost>\n      <Plugin>\n        <Template name=\"root\">\n          <TemplatePlaceholder name=\"list\" params={items} />\n          <TemplatePlaceholder name=\"loading\" />\n        </Template>\n      </Plugin>\n      {otherPlugins}\n    </PluginHost>\n  )\n}\n\nListCore.defaultProps = {\n  items: []\n}\n\nListCore.propTypes = {\n  items: PropTypes.array\n}\n\nexport default ListCore\n","import { useState, useCallback, useEffect } from 'react'\nimport { useDispatch, useMappedState } from 'redux-react-hook'\nimport { push } from 'connected-react-router'\nimport queryString from 'query-string'\n\nexport function useFetchByQuery (defaultQuery, fetchAction, routerAction = push) {\n  const dispatch = useDispatch()\n  const mapState = useCallback(state => ({\n    path: state.router.location.pathname\n  }), [])\n  const { path } = useMappedState(mapState)\n\n  const [initialized, setInitialized] = useState(false)\n  useEffect(() => {\n    if (!initialized) {\n      dispatch(fetchAction(defaultQuery))\n      setInitialized(true)\n    }\n  })\n\n  const fetch = (query) => {\n    if (!query.fetchByUrl) {\n      const newPath = `${path}?${queryString.stringify(query)}`\n      dispatch(routerAction(newPath))\n    }\n    dispatch(fetchAction(query))\n  }\n\n  return fetch\n}\n\nexport function useSelector (selector, input = []) {\n  const mapState = useCallback(selector, input)\n  return useMappedState(mapState)\n}\n\nexport function useScrollListener (handleScroll, target = window) {\n  useEffect(() => {\n    const scroll = (event) => handleScroll(event)\n    target.addEventListener('scroll', scroll)\n    return () => target.removeEventListener('scroll', scroll)\n  })\n}\n","import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template, TemplatePlaceholder } from '@devexpress/dx-react-core'\nimport { useScrollListener } from '../../../util/hooks'\n\nfunction InfiniteScroll (props) {\n  const { loadMore, isLoading } = props\n  const target = props.target || document.documentElement || document.body\n  const handleScroll = useCallback((event) => {\n    const scrollHeight = target.scrollHeight\n    const clientHeight = target.clientHeight\n    const scrollTop = target.scrollTop\n    const scrollToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight\n    if (loadMore && !isLoading && scrollToBottom) loadMore()\n  }, [loadMore, isLoading, target])\n  useScrollListener(handleScroll, target)\n  return (\n    <Plugin>\n      <Template name=\"list\">\n        {(items) => (\n          <TemplatePlaceholder />\n        )}\n      </Template>\n    </Plugin>\n  )\n}\n\nInfiniteScroll.defaultProps = {\n  loadMore: null,\n  isLoading: false\n}\n\nInfiniteScroll.propTypes = {\n  loadMore: PropTypes.func,\n  isLoading: PropTypes.bool,\n  target: PropTypes.object\n}\n\nexport default InfiniteScroll\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nfunction DefaultListItem (props) {\n  const { message } = props\n  return (\n    <ListItem>\n      <ListItemText primary={<Typography variant=\"subtitle1\">{message}</Typography>} />\n    </ListItem>\n  )\n}\n\nDefaultListItem.defaultProps = {\n  message: ''\n}\n\nDefaultListItem.propTypes = {\n  message: PropTypes.string\n}\n\nexport default DefaultListItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template } from '@devexpress/dx-react-core'\n\nfunction ListTemplate (props) {\n  const {\n    containerComponent: Container,\n    itemComponent: Item\n  } = props\n  return (\n    <Plugin>\n      <Template name=\"list\">\n        {(items) => (\n          <Container>\n            {items.map((item, index) => (<Item key={index} {...item} />))}\n          </Container>\n        )}\n      </Template>\n    </Plugin>\n  )\n}\n\nListTemplate.propTypes = {\n  containerComponent: PropTypes.func,\n  itemComponent: PropTypes.func\n}\n\nListTemplate.components = {\n  containerComponent: 'Container',\n  itemComponent: 'Item'\n}\n\nexport default ListTemplate\n","import { withComponents } from '@devexpress/dx-react-core'\nimport DefaultListItem from './DefaultListItem'\nimport List from '@material-ui/core/List'\nimport ListTemplate from '../core/List/templates/ListTemplate'\n\nexport default withComponents({\n  Container: List,\n  Item: DefaultListItem\n})(ListTemplate)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Plugin, Template } from '@devexpress/dx-react-core'\n\nfunction LoadingTemplate (props) {\n  const {\n    isLoading,\n    loadingComponent: Loading\n  } = props\n  return (\n    <Plugin>\n      <Template name=\"loading\">\n        {() => {\n          if (isLoading) return (<Loading />)\n          return null\n        }}\n      </Template>\n    </Plugin>\n  )\n}\n\nLoadingTemplate.defaultProps = {\n  isLoading: false\n}\n\nLoadingTemplate.propTypes = {\n  isLoading: PropTypes.bool,\n  loadingComponent: PropTypes.func\n}\n\nLoadingTemplate.components = {\n  loadingComponent: 'Loading'\n}\n\nexport default LoadingTemplate\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n  root: {\n    paddingBottom: theme.spacing.unit * 2\n  }\n})\n\nfunction Loading (props) {\n  const { classes } = props\n  return (\n    <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\n      <CircularProgress color=\"secondary\" />\n    </Grid>\n  )\n}\n\nexport default withStyles(styles)(Loading)\n","import { withComponents } from '@devexpress/dx-react-core'\nimport LoadingTemplate from '../core/List/templates/LoadingTemplate'\nimport Loading from './Loading'\n\nexport default withComponents({\n  Loading\n})(LoadingTemplate)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nfunction RepositoriesListItem (props) {\n  const { fullName, htmlUrl, language } = props\n  return (\n    <ListItem component=\"a\" button href={htmlUrl}>\n      <ListItemText\n        primary={<Typography variant=\"subtitle1\">{fullName}</Typography>}\n        secondary={<Typography variant=\"body2\">{language}</Typography>}\n      />\n    </ListItem>\n  )\n}\n\nRepositoriesListItem.defaultProps = {\n  fullName: '',\n  htmlUrl: '',\n  language: ''\n}\n\nRepositoriesListItem.propTypes = {\n  fullName: PropTypes.string,\n  htmlUrl: PropTypes.string,\n  language: PropTypes.string\n}\n\nexport default RepositoriesListItem\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\n\nconst paperStyles = theme => ({\n  root: {\n    padding: theme.spacing.unit\n  }\n})\n\nconst fieldStyles = theme => ({\n  root: {\n    padding: 0\n  }\n})\n\nfunction BasePaper (props) {\n  const { classes, children } = props\n  return (\n    <Paper className={classes.root}>\n      {children}\n    </Paper>\n  )\n}\n\nconst StyledPaper = withStyles(paperStyles)(BasePaper)\n\nfunction BaseField (props) {\n  const { classes, ...restProps } = props\n  return (<TextField className={classes.root} {...restProps} />)\n}\n\nconst StyledField = withStyles(fieldStyles)(BaseField)\n\nfunction CardTextField (props) {\n  return (\n    <StyledPaper>\n      <StyledField {...props}/>\n    </StyledPaper>\n  )\n}\n\nexport default CardTextField\n","import { createSelector } from 'reselect'\nimport queryString from 'query-string'\nimport { createListSelector, createMetaSelector } from '../../../util/createSelector'\n\nexport const selectSearch = state => state.router.location.search\n\nexport const selectRepositoriesEntity = state => state.search.entity.repositories || {}\nexport const selectRepositoriesMeta = state => state.search.meta.repositories || {}\n\nexport const getRepositories = createListSelector([selectSearch, selectRepositoriesEntity, selectRepositoriesMeta])\nexport const getRepositoriesMeta = createMetaSelector([selectSearch, selectRepositoriesMeta])\nexport const getQuery = createSelector(selectSearch, (search) => queryString.parse(search))\n","import { createSelector } from 'reselect'\n\nexport function createListSelector (selectors) {\n  return createSelector(\n    selectors,\n    (search, entity, meta) => {\n      const selectedMeta = meta[search] || {}\n      const ids = selectedMeta.ids || []\n      const list = ids\n        .filter(id => entity[id] !== undefined)\n        .map(id => entity[id])\n      return list\n    }\n  )\n}\n\nexport function createMetaSelector (selectors) {\n  return createSelector(\n    selectors,\n    (search, meta) => meta[search] || {}\n  )\n}\n","import React, { useRef, useLayoutEffect, useCallback } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { replace } from 'connected-react-router'\nimport Paper from '@material-ui/core/Paper'\nimport ListCore from '../../../core/List'\nimport InfiniteScroll from '../../../core/List/plugins/InfiniteScroll'\nimport AppFrame from '../../../components/AppFrame'\nimport ListLayout from '../../../components/ListLayout'\nimport ListLoading from '../../../components/ListLoading'\nimport RepositoryListItem from '../../../components/RepositoryListItem'\nimport CardTextField from '../../../components/CardTextField'\nimport { useFetchByQuery, useSelector } from '../../../util/hooks'\nimport { getRepositories, getRepositoriesMeta, getQuery } from '../duck/selectors'\nimport * as actions from '../duck/actions'\n\nconst PAPER_HEIGHT = 480\n\nconst styles = theme => ({\n  list: {\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit\n  },\n  paper: {\n    maxHeight: PAPER_HEIGHT,\n    overflowY: 'auto'\n  }\n})\n\nfunction Search (props) {\n  const { classes } = props\n  const repositories = useSelector(getRepositories)\n  const meta = useSelector(getRepositoriesMeta)\n  const defaultQuery = useSelector(getQuery)\n  const fetchRepositories = useFetchByQuery(defaultQuery, actions.fetchRepositories, replace)\n  const ref = useRef()\n  useLayoutEffect(() => {\n    ref.current = meta\n  })\n  const handleLoadMore = useCallback(() => {\n    const meta = ref.current\n    fetchRepositories({ fetchByUrl: true, url: meta.pagination.nextUrl, metaId: meta.id })\n  }, [ref])\n  const isLoading = meta.status === 'loading'\n\n  return (\n    <AppFrame title=\"Search GitHub\">\n      <CardTextField\n        label=\"Search\"\n        fullWidth\n        onChange={(event) => fetchRepositories({ q: event.target.value })}\n        defaultValue={defaultQuery.q}\n      />\n      <section className={classes.list}>\n        <Paper>\n          <div id=\"paper\" className={classes.paper}>\n            {(repositories.length !== 0 || isLoading) && (\n              <ListCore items={repositories}>\n                <ListLayout itemComponent={RepositoryListItem} />\n                <ListLoading isLoading={isLoading} />\n                <InfiniteScroll\n                  isLoading={isLoading}\n                  loadMore={handleLoadMore}\n                  target={document.querySelector('#paper')}\n                />\n              </ListCore>\n            )}\n          </div>\n        </Paper>\n      </section>\n    </AppFrame>\n  )\n}\n\nexport default withStyles(styles)(Search)\n"],"sourceRoot":""}