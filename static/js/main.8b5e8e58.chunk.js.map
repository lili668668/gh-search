{"version":3,"sources":["App/modules/search/duck/actions.js","App/util/createActions.js","App/modules/search/duck/types.js","App/util/createTypes.js","App/core/ErrorPage.js","App/core/ErrorBoundary.js","App/core/LoadingPage.js","App/modules/search/routes.js","App/modules/routes.js","App/store/history.js","App/util/createReducers.js","App/modules/search/duck/reducers.js","App/store/reducers.js","App/modules/search/duck/epics.js","App/util/createEpics.js","App/store/epics.js","App/store/index.js","App/App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchRepositories","types","_types","Object","slicedToArray","fetchType","requestType","successType","failureType","metaFunc","meta","objectSpread","action","fetchAction","createAction","option","request","success","response","failure","error","createFetchActions","values","name","_ref","namespace","arguments","length","undefined","prefix","concat","toUpperCase","uppercaseAction","uppercaseName","actionType","defineProperty","createRequestTypes","withStyles","theme","root","minHeight","icon","width","height","color","palette","main","anchor","dark","props","classes","react_default","a","createElement","Grid_default","container","direction","justify","alignItems","className","Error_default","classnames","Typography_default","variant","href","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","console","log","core_ErrorPage","children","React","Component","CircularProgress_default","disableShrink","Search","lazy","Promise","all","e","then","bind","routes","Route","key","exact","path","component","modules_routes","toConsumableArray","search","history","createHashHistory","requestTypes","successTypes","failureTypes","combineReducers","entity","payload","entities","merge","idsReducer","id","result","union","filter","includes","statusReducer","type","paginationReducer","pagination","assign","selectedState","newSelectedState","keys","map","newItem","status","ids","reduce","item","createMeta","router","connectRouter","baseRepoUrl","fetchRepositoriesEpic","baseUrl","getPayload","action$","pipe","ofType","switchMap","url","metaId","fetchByUrl","queryString","stringify","ajax","getJSON","catchError","of","startWith","createFetchEpic","fetch","actions","repositoriesSchema","schema","Entity","normalizedData","normalize","items","humps","camelizeKeys","repositories","qs","indexOf","slice","query","parse","newQuery","page","Number","nextUrl","combineEpics","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootEpic","App","index_es","Provider","value","es","CssBaseline_default","esm","core_ErrorBoundary","Suspense","fallback","core_LoadingPage","Switch","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b5e8e58.chunk.js","sourcesContent":["import { createFetchActions } from '../../../util/createActions'\nimport * as types from './types'\n\nexport const fetchRepositories = createFetchActions(Object.values(types.fetchRepositories))\n","import { createAction } from 'redux-actions'\n\nexport function createFetchActions (types) {\n  const [fetchType, requestType, successType, failureType] = types\n  const metaFunc = meta => ({ ...meta, action: 'fetch' })\n  const fetchAction = createAction(fetchType, option => option)\n  fetchAction.request = createAction(requestType, meta => null, metaFunc)\n  fetchAction.success = createAction(successType, (meta, response) => response, metaFunc)\n  fetchAction.failure = createAction(failureType, (meta, error) => error, metaFunc)\n  return fetchAction\n}\n","import { createRequestTypes } from '../../../util/createTypes'\n\nexport const fetchRepositories = createRequestTypes('fetch', 'repositories', { namespace: 'search' })\n","export function createRequestTypes (action, name, option = {}) {\n  const { namespace } = option\n  const prefix = namespace !== undefined ? `${namespace.toUpperCase()}/` : ''\n  const uppercaseAction = action.toUpperCase()\n  const uppercaseName = name.toUpperCase()\n  const actionType = `${prefix}${uppercaseAction}_${uppercaseName}`\n  const requestType = `${prefix}${uppercaseAction}_${uppercaseName}_REQUEST`\n  const successType = `${prefix}${uppercaseAction}_${uppercaseName}_SUCCESS`\n  const failureType = `${prefix}${uppercaseAction}_${uppercaseName}_FAILURE`\n  return {\n    [action]: actionType,\n    request: requestType,\n    success: successType,\n    failure: failureType\n  }\n}\n","import React from 'react'\nimport classnames from 'classnames'\nimport { withStyles } from '@material-ui/core/styles'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n  root: {\n    minHeight: 400\n  },\n  icon: {\n    width: 60,\n    height: 60\n  },\n  error: {\n    color: theme.palette.error.main\n  },\n  anchor: {\n    color: theme.palette.error.dark\n  }\n})\n\nfunction ErrorPage (props) {\n  const { classes } = props\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <ErrorIcon className={classnames(classes.icon, classes.error)} />\n      <Typography className={classes.error} variant=\"body1\">An unexpected error has occurred.</Typography>\n      <Typography className={classes.error} variant=\"body1\">Please contact author: <a href={`mailTo:lili668668@gmail.com`} className={classes.anchor}>lili668668@mgmail.com</a></Typography>\n    </Grid>\n  )\n}\n\nexport default withStyles(styles)(ErrorPage)\n\n","import React from 'react'\nimport ErrorPage from './ErrorPage'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, info) {\n    console.error(error)\n    console.log(info)\n  }\n\n  render() {\n    if (this.state.hasError) return (<ErrorPage />)\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n  root: {\n    minHeight: 400\n  }\n})\n\nfunction LoadingPage (props) {\n  const { classes } = props\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <CircularProgress disableShrink color=\"secondary\" />\n    </Grid>\n  )\n}\n\nexport default withStyles(styles)(LoadingPage)\n\n","import React, { lazy } from 'react'\nimport { Route } from 'react-router-dom'\n\nconst Search = lazy(() => import('./pages/Search'))\n\nexport default [\n  (<Route key=\"search\" exact path=\"/\" component={() => <Search />} />)\n]\n","import search from './search/routes'\n\nexport default [\n  ...search\n]\n","import { createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nexport default history\n","import union from 'lodash/union'\nimport merge from 'lodash/merge'\n\nexport function createEntity (name) {\n  return function Entity (state = {}, action) {\n    if (action.payload && action.payload.entities && action.payload.entities[name]) {\n      return merge({}, state, { [name]: action.payload.entities[name] })\n    }\n    return state\n  }\n}\n\nexport function createMeta (name, types) {\n  const idsReducer = (state = [], action, key) => {\n    switch (action.meta.action) {\n      case 'fetch':\n        if (action.meta.id === key && action.payload && action.payload.result && action.payload.result[name]) {\n          return union([...state, ...action.payload.result[name]])\n        }\n        return state\n      case 'update':\n      case 'add':\n        if (action.payload && action.payload.result && action.payload.result[name]) {\n          return union([...action.payload.result[name], ...state])\n        }\n        return state\n      case 'delete':\n        if (action.payload && action.payload.result && action.payload.result[name]) {\n          return state.filter(id => !action.payload.result[name].includes(id))\n        }\n        return state\n      default:\n        return state\n    }\n  }\n\n  const {requestTypes, successTypes, failureTypes} = types\n  const statusReducer = (state = 'none', action, key) => {\n    if (action.meta.id !== key) return state\n    if (requestTypes.includes(action.type)) return 'loading'\n    if (successTypes.includes(action.type)) return 'success'\n    if (failureTypes.includes(action.type)) return 'failure'\n    return state\n  }\n\n  const paginationReducer = (state = {}, action, key) => {\n    if (action.meta.id !== key) return state\n    if (action.payload && action.payload.pagination) return Object.assign({}, state, action.payload.pagination)\n    return state\n  }\n\n  return function Meta (state = {}, action) {\n    if (!action.meta) return state\n    const selectedState = Object.assign({}, state[name])\n    let newSelectedState = merge(selectedState, { [action.meta.id]: {} })\n    newSelectedState = Object.keys(newSelectedState)\n      .map(key => {\n        const newItem = {\n          id: action.meta.id,\n          status: statusReducer(newSelectedState[key].status, action, key),\n          ids: idsReducer(newSelectedState[key].ids, action, key),\n          pagination: paginationReducer(newSelectedState[key].pagination, action, key)\n        }\n        return { [key]: newItem }\n      })\n      .reduce((meta, item) => Object.assign({}, meta, item), {})\n    return merge({}, state, { [name]: newSelectedState })\n  }\n}\n","import { combineReducers } from 'redux'\nimport { createEntity, createMeta } from '../../../util/createReducers'\nimport * as types from './types'\n\nconst requestTypes = [types.fetchRepositories.request]\nconst successTypes = [types.fetchRepositories.success]\nconst failureTypes = [types.fetchRepositories.failure]\n\nexport default combineReducers({\n  entity: createEntity('repositories'),\n  meta: createMeta('repositories', { requestTypes, successTypes, failureTypes })\n})\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport history from './history'\nimport search from '../modules/search/duck/reducers'\n\nexport default combineReducers({\n  router: connectRouter(history),\n  search\n})\n","import { combineEpics } from 'redux-observable'\nimport { normalize, schema } from 'normalizr'\nimport humps from 'humps'\nimport queryString from 'query-string'\nimport { createFetchEpic } from '../../../util/createEpics'\nimport * as actions from './actions'\nimport * as types from './types'\n\nconst baseRepoUrl = 'https://api.github.com/search/repositories'\n\nconst fetchRepositoriesEpic = createFetchEpic({\n  baseUrl: baseRepoUrl,\n  type: types.fetchRepositories.fetch,\n  fetchAction: actions.fetchRepositories,\n  getPayload: (response, url) => {\n    const repositoriesSchema = new schema.Entity('repositories')\n    const normalizedData = normalize(response, { items: [repositoriesSchema] })\n    const entities = humps.camelizeKeys(normalizedData.entities)\n    const result = { repositories: normalizedData.result.items }\n    const qs = url.indexOf('?') >= 0 ? url.slice(url.indexOf('?')) : ''\n    const query = queryString.parse(qs)\n    const newQuery = { ...query }\n    if (query.page) {\n      newQuery.page = Number(query.page) + 1\n    } else {\n      newQuery.page = 2\n    }\n    const nextUrl = `${baseRepoUrl}?${queryString.stringify(newQuery)}`\n    const pagination = { nextUrl }\n    return { entities, result, pagination }\n  }\n})\n\nexport default combineEpics(\n  fetchRepositoriesEpic\n)\n","import { of } from 'rxjs'\nimport { ajax } from 'rxjs/ajax'\nimport { switchMap, startWith, map, catchError } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\nimport queryString from 'query-string'\n\nexport function createFetchEpic ({ baseUrl, type, fetchAction, getPayload }) {\n  return (action$) => action$.pipe(\n    ofType(type),\n    switchMap(action => {\n      let url = ''\n      let metaId = '?'\n      if (action.payload && action.payload.fetchByUrl) {\n        metaId = action.payload.metaId\n        url = action.payload.url\n      } else {\n        metaId = `?${queryString.stringify(action.payload)}`\n        url = `${baseUrl}${metaId}`\n      }\n      const meta = { id: metaId }\n      return ajax.getJSON(url).pipe(\n        map(response => fetchAction.success(meta, getPayload(response, url))),\n        catchError(error => of(fetchAction.failure(meta, error))),\n        startWith(fetchAction.request(meta))\n      )\n    })\n  )\n}\n","import { combineEpics } from 'redux-observable'\nimport search from '../modules/search/duck/epics'\n\nexport default combineEpics(\n  search\n)\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { routerMiddleware } from 'connected-react-router'\nimport rootReducer from './reducers'\nimport rootEpic from './epics'\nimport history from './history'\n\nconst epicMiddleware = createEpicMiddleware()\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      epicMiddleware,\n      routerMiddleware(history)\n    )\n  )\n)\n/* eslint-enable */\n\nepicMiddleware.run(rootEpic)\n\nexport default store\n","import React from 'react'\nimport { Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Provider } from 'react-redux'\nimport { StoreContext } from 'redux-react-hook'\nimport ErrorBoundary from './core/ErrorBoundary'\nimport LoadingPage from './core/LoadingPage'\nimport routes from './modules/routes'\nimport store from './store'\nimport history from './store/history'\n\nfunction App (props) {\n  return (\n    <StoreContext.Provider value={store}>\n      <Provider store={store}>\n        <CssBaseline />\n        <ConnectedRouter history={history}>\n          <ErrorBoundary>\n            <React.Suspense fallback={<LoadingPage />}>\n              <Switch>\n                {routes}\n              </Switch>\n            </React.Suspense>\n          </ErrorBoundary>\n        </ConnectedRouter>\n      </Provider>\n    </StoreContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}